name: 'Build and Push Release Image'

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and push (leave empty for latest)'
        required: true
        default: ''
      heap_size:
        description: 'Heap size in MB'
        required: true
        default: 1024
      max_threads:
        description: 'Number of TCS(max threads)'
        required: true
        default: 64
      production:
        description: 'Production'
        required: true
        default: 'ON'
      azure_tenant_id:
        description: 'Azure Tenant ID (leave empty to use the local testing key)'
        required: false
        type: string
        default: ''
      azure_subscription_id:
        description: 'Azure Subscription ID (leave empty to use the local testing key)'
        required: false
        type: string
        default: ''

jobs:
  build-and-push:
    runs-on: arc-runner-set
    environment: production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.5

      - name: 'Login to Azure docker registry'
        uses: azure/docker-login@v1
        with:
          login-server: testnetobscuronet.azurecr.io
          username: testnetobscuronet
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Get version'
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            # Fetch the latest tag from the repository
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "VERSION=${LATEST_TAG}" >> $GITHUB_OUTPUT
          fi

      - name: 'Build and push ten-edglessdb image'
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          AZURE_TENANT_ID: ${{ github.event.inputs.azure_tenant_id }}
          AZURE_SUBSCRIPTION_ID: ${{ github.event.inputs.azure_subscription_id }}
          HEAP_SIZE: ${{ github.event.inputs.heap_size }}
          MAX_THREADS: ${{ github.event.inputs.max_threads }}
          PRODUCTION: ${{ github.event.inputs.production }}
        run: |
          DOCKER_BUILDKIT=1 docker build  -t testnetobscuronet.azurecr.io/obscuronet/ten-edb-${HEAP_SIZE}:${VERSION} \ 
            --build-arg AZURE_TENANT_ID=${AZURE_TENANT_ID} \
            --build-arg AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID} \
            --build-arg HEAP_SIZE=${HEAP_SIZE} \
            --build-arg MAX_THREADS=${MAX_THREADS} \
            --build-arg PRODUCTION=${PRODUCTION} \
            -f Dockerfile \ 
            --secret id=signingkey,src=testnet.pem .
          docker push testnetobscuronet.azurecr.io/obscuronet/ten-edb-${HEAP_SIZE}:${VERSION}
          
